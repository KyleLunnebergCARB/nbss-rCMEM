Variable Name (Original),Functions,Min,Max,Description,Notes
massPools,addCohort,,,"A data frame containing the following colums: age, fast_OM, slow_OM, mineral, layer_top, layer_bottom, root_mass. Each row of this data frame represents a single cohort. To increase runtime in simulations, the profile is buffered with NA's at the top of the data frame, see code comments for details.",
packing,addCohort,,,A list of numerics with mineral and organic arguments representing their respective packing densities.,
timeStep,addCohort,,,A numeric of the time step in years. Typically set to 1 year.,
rootTurnover,"addCohort, runMemWithCohorts",,,A numeric as the root turnover time in faction per year.,
rootOmFrac,addCohort,,,A list of numerics called fast and slow which is the allocation fraction between fast and slow organic matter pool respectively for dead roots.,
omDecayRate,"addCohort, runMemWithCohorts",,,A list of numerics called fast and slow which is the decay rate for the fast and slow organic matter pool in fraction per year.,
...,"addCohort, deliverSedimentFlexibly, depthOfNonRootVolume, massLiveRoots, runToEquilibrium, sedimentInputs, runMemWithCohorts",,,arguments to be passed to the specified functions,
cohorts,"animateCohorts, trimCohorts",,,"data frame, annually tracked soil mass cohorts output from runMemWithCohorts",
scenario,animateCohorts,,,"data frame, annual summaries of inputs and outputs from runMemWithCohorts",
filename,animateCohorts,,,"character, name of the output file",
savePath,animateCohorts,,,"character, filepath to save animation to",
chPalette,animateCohorts,,,"vector, a vector of colors to use to symbolize the different mass cohorts","typo in param, should be ""chPalette"""
trackThresholds,animateCohorts,,,"vector, a vector of characters indicating which water leves in the scenario table to map as horizontal lines",
duration,animateCohorts,,,"numeric, length in seconds of the animation",
width,animateCohorts,,,"numeric, width in inches of the .gif",
height,animateCohorts,,,"numeric, height in inches of the .gif",
floodPct,"availableSediment, deliveredSedimentSimple",,,"a numeric, fraction of time per tidal cycle the marsh is inundated",
suspendedSediment,"availableSediment, buildScenarioCurve, deliveredSediment3TidalCycle, deliveredSedimentSimple, deliverSedimentFlexibly, sedimentInputs, runMemWithCohorts",,,"a numeric or a vector of numbers, either average annual suspended sediment concentration, or a vector of annual suspended sediment concentration for each year of the scenario",
settlingVelocity,"availableSediment, deliveredSediment3TidalCycle, deliveredSedimentSimple, deliverSedimentFlexibly, runMemWithCohorts",,,"a numeric, the number of times a water column will clear per tidal cycle",
capturedSediment,"availableSediment, deliveredSediment3TidalCycle, deliveredSedimentSimple",,,"numeric, the fraction of available sediment captured by the marsh",
scenarioCurve,buildHighTideScenario,,,"a data frame, including year, mean sea level, and suspended sediment concentration, with each row being a year in the scenario",
meanSeaLevelDatum,"buildHighTideScenario, predictLunarNodalCycle, runMemWithCohorts",,,"a numeric, Mean Sea Level over a tidal datum period",
meanHighWaterDatum,buildHighTideScenario,,,"a numeric, Mean High Water level over the last datum period",
meanHighHighWaterDatum,buildHighTideScenario,,,"a numeric, Mean Higher High Water level over the last datum period",
meanHighHighWaterSpringDatum,buildHighTideScenario,,,"a numeric, Mean Higher High Spring Tide Water level over the last datum period",
lunarNodalAmp,"buildHighTideScenario,  predictLunarNodalCycle, runMemWithCohorts",,,the amplitude of the 18-year lunar nodal cycle,
startYear,"buildScenarioCurve, runMemWithCohorts",,,"an integer, year in form YYYY, the start year of the scenario",
endYear,"buildScenarioCurve, runMemWithCohorts",,,"an integer, year in form YYYY, the end year of the scenario",
meanSeaLevel ,"buildScenarioCurve, predictLunarNodalCycle, deliveredSediment3TidalCycle, deliveredSedimentSimple, deliverSedimentFlexibly,  zStarToZ, zToZstar,",,,"a numeric or a vector of numbers, either indicating mean sea-level at the start of scenario, or mean sea-level at each year of the sceanrio",
meanHighWater,"deliveredSediment3TidalCycle, deliveredSedimentSimple, deliverSedimentFlexibly, runMemWithCohorts,  zStarToZ, zToZstar,",,,,
meanHighHighWater,"deliveredSediment3TidalCycle, deliverSedimentFlexibly, runMemWithCohorts",,,,
meanHighHighWaterSpring,"deliveredSediment3TidalCycle, deliverSedimentFlexibly, runMemWithCohorts",,,,
"relSeaLevelRiseInit, relSeaLevelRiseInit","buildScenarioCurve, runMemWithCohorts",,,"a numeric, initial rate of relative sea-level rise",
rslrTotal,"buildScenarioCurve, runMemWithCohorts",,,"a numeric, total relative sea-level rise over the course of the scanario",
ageCohort,convertProfile_AgeToDepth,,,"a dataframe specifying the age cohort. Must contain \code{layer_top}, \code{layer_bottom}, \code{age}, \code{fast_OM}, \code{slow_OM}, \code{mineral}, and \code{root_mass}.",
layerTop,"convertProfile_AgeToDepth, massLiveRoots",,,a vector of the tops of the soil layers we want to convert to.,
layerBottom,"convertProfile_AgeToDepth, massLiveRoots",,,a vector of the bottom of the soil layers we want to convert to.,
z,"deliveredSediment3TidalCycle, deliveredSedimentSimple, deliverSedimentFlexibly, floodTimeFromDatum, predictedBiomass, zToZstar",,,"a numeric, elevation of the marsh",
meanLowWater,"deliveredSediment3TidalCycle, deliveredSedimentSimple",,,"a numeric, Mean Low Water level",
meanLowLowWater,deliveredSediment3TidalCycle,,,"a numeric, Mean Lower Low Water level",
meanLowLowWaterSpring,deliveredSediment3TidalCycle,,,"a numeric, Mean Low Lower Spring Tide Water level",
nTides,deliveredSedimentSimple,,,"an integer, the number of flooding events in a year",
totalRootMassPerArea,"depthOfNonRootVolume, massLiveRoots",,,"an integer that is the total mass per area of the roots, generally in g cm-3",
rootDepthMax,"depthOfNonRootVolume, massLiveRoots, runMemWithCohorts",,,"an integer that is the maximum root depth, generally in cm",
rootDensity,depthOfNonRootVolume,,,a numeric that is the root density in g per cm3,
soilLength,"depthOfNonRootVolume, massLiveRoots, sedimentInputs",,,"a numeric of the unit length of soil volume, generally 1 cm",
soilWidth,"depthOfNonRootVolume, massLiveRoots, sedimentInputs",,,"a numeric of the unitl witdth of the soil colume, generally 1cm",
shape,"depthOfNonRootVolume, massLiveRoots, runMemWithCohorts",,,"a character of the shape of the root distribution, currently only 'linear' is implimented",
nonRootVolume.arr,depthOfNonRootVolume,,,"a numerical array of the cumulative non-rooting volume, assumed to be monotonically increasing",
relTol,"depthOfNonRootVolume, runToEquilibrium",,,a numeric the relative tolerence accepted for the general depth solution,
verbose,depthOfNonRootVolume,,,"a boolean flag, true prints out a lot of strings to help debug the general solution",
datumHigh,floodTimeFromDatum,,,"a numeric, highest water level of the tidal period",
datumLow,floodTimeFromDatum,,,"a numeric, lowest water level of the tidal period",
bMax,"predictedBiomass, runMemWithCohorts",,,maximum biomass,
zVegMax,"predictedBiomass, runMemWithCohorts",,,upper elevation of biomass limit,
 zVegMin,"predictedBiomass, runMemWithCohorts",,,lower elevation of biomass limit,
zVegPeak,"predictedBiomass, runMemWithCohorts",,,(optional) elevation of peak biomass,
floodElv,predictLunarNodalCycle,,,"a numeric, high tide level over the last complete 18 year datum period",
minAge,runToEquilibrium,,,run the model for atleast these many years,
maxAge,runToEquilibrium,,,do not run the model for longer then these many years,
recordEvolution,runToEquilibrium,,,a boolean flag to record how the equalibrium profile evolves,
absTol,runToEquilibrium,,,stop the evolution if the absolute difference between the two oldest cohorts is less then this,
meanTidalHeight,sedimentInputs,,,annual mean tide above marsh elevation,
nTidesPerYear,sedimentInputs,,,number of tides per year,
zStar ,zStarToZ,,,a numeric describing the normalized Z* elevation,
initElv,runMemWithCohorts,,,"a numeric, the initial elevation of the marsh at the start of the scenario",
plantElevationType,runMemWithCohorts,,,"character, either ""orthometric"" or ""dimensionless"", specifying elevation reference of the vegetation growing elevations",
rootToShoot,runMemWithCohorts,,,"a numeric, root to shoot ratio",
recalcitrantFrac,runMemWithCohorts,,,"a numeric, fraction of organic matter resistant to decay",
omPackingDensity,runMemWithCohorts,,,"a numeric, the bulk density of pure organic matter",
mineralPackingDensity,runMemWithCohorts,,,"a numeric, the bulk density of pure mineral matter",
rootPackingDensity,runMemWithCohorts,,,"a numeric, the bulk density of pure root matter",
coreYear,runMemWithCohorts,,,"an integer, year in form YYYY, (optional) specify a year to simulate taking a sediment core",
coreDepth,runMemWithCohorts,,,"an integer, depth, (optional) specify a depth to simulate coring to and assume 1 cm sampling intervals",
coreMins,runMemWithCohorts,,,"a vector of sampling depth minimums (optional) to simulate coring subsables, this is an alternative to depth, and 1cm increments",
coreMaxs,runMemWithCohorts,,,"a vector of sampling depth maximums (optional) to simulate coring subsables, this is an alternative to depth, and 1cm increments",
mineralInput,addCohort,,,undocumented,
expDecayRatePerMaxDepth,massLiveRoots,,,undocumented,
year,predictLunarNodalCycle,,,undocumented,
